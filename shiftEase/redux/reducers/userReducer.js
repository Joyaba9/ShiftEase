import { createSlice } from '@reduxjs/toolkit';

// Define the initial state for the user slice. 
// This state will track whether a user is logged in, whether a login request is being processed (loading), and any errors during login.
const initialState = {
    loggedInUser: null,
    loading: false,
    error: null,
};

// Create a Redux slice for user-related actions using Redux Toolkit's createSlice.
// The createSlice function automatically generates actions and reducers for this slice.
const userSlice = createSlice({
    name: 'user',
    initialState,
    reducers: {
      // This reducer handles the login request action.
      // When a login is initiated, the loading state is set to true to indicate that the process is ongoing.
      loginRequest: (state) => {
        state.loading = true;
      },
      // This reducer handles successful login.
      // The loading state is set to false, and the logged-in user data is stored in the state.
      loginSuccess: (state, action) => {
        state.loading = false;
        state.loggedInUser = action.payload;
      },
      // This reducer handles failed login attempts.
      // The loading state is set to false, and an error message is stored in the state.
      loginFailure: (state, action) => {
        state.loading = false;
        state.error = action.payload;
      },
      // This reducer handles logging out.
      // It clears the loggedInUser data from the state.
      logout: (state) => {
        state.loggedInUser = null;
      },
    },
});
  
// Export the actions generated by createSlice
// These actions will be dispatched in different parts of the application when needed (e.g., during login or logout).
export const { loginRequest, loginSuccess, loginFailure, logout } = userSlice.actions;
  
// Export the reducer, which will be used by the Redux store to manage the user slice of the state.
export default userSlice.reducer;

